openapi: 3.0.3
info:
  title: Prices API
  version: 1.0.0
  description: |
    API to query the price applicable for a product of a brand at a specific date and time.
  contact:
    email: genisgutierrezbernal@gmail.com

servers:
  - url: http://localhost:8080
    description: Local test server

tags:
  - name: Prices
    description: Operations related to product prices

paths:
  /prices:
    get:
      tags:
        - Prices
      operationId: getPrices
      summary: Get pricing information for a product
      description: Returns the applicable price for a product in a brand within a specific date range.
      parameters:
        - $ref: '#/components/parameters/AcceptLanguageHeader'
        - $ref: '#/components/parameters/DateQueryParam'
        - $ref: '#/components/parameters/ProductIdQueryParam'
        - $ref: '#/components/parameters/BrandIdQueryParam'
        - $ref: '#/components/parameters/PageQueryParam'
        - $ref: '#/components/parameters/PageSizeQueryParam'
        - $ref: '#/components/parameters/SortDirQueryParam'
        - $ref: '#/components/parameters/GetPricesSortFieldQueryParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricePaginatedDTO'
        '400':
          description: Invalid input parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'

components:
  parameters:

    DateQueryParam:
      in: query
      name: date
      required: true
      schema:
        type: string
        example: "2020-06-14T10:00:00"
      description: |
        Date and time for price applicability in local format (no timezone, pattern: yyyy-MM-dd'T'HH:mm:ss)

    ProductIdQueryParam:
      in: query
      name: productId
      required: true
      schema:
        type: integer
        format: int64
        example: 35455
      description: Identifier of the product.

    BrandIdQueryParam:
      in: query
      name: brandId
      required: true
      schema:
        type: integer
        format: int64
        example: 1
      description: Identifier of the brand (e.g., 1 for ZARA).

    PageQueryParam:
      in: query
      name: page
      schema:
        type: integer
        default: 1
        minimum: 1
      description: The page number to retrieve.

    PageSizeQueryParam:
      in: query
      name: pageSize
      schema:
        type: integer
        minimum: 1
        default: 10
        maximum: 50
      description: The number of items per page to retrieve.

    AcceptLanguageHeader:
      name: Accept-Language
      in: header
      description: Supported languages for the response (default is en_US).
      schema:
        $ref: '#/components/schemas/AcceptLanguageENUM'

    SortDirQueryParam:
      in: query
      name: sortDir
      description: Field by which to sort results.
      schema:
        $ref: '#/components/schemas/SortDirENUM'

    GetPricesSortFieldQueryParam:
      in: query
      name: sortField
      description: Sort order (ascending or descending).
      schema:
        $ref: '#/components/schemas/GetPricesSortFieldENUM'

  schemas:

    AcceptLanguageENUM:
      type: string
      enum: [ en-US, es-ES ]

    SortDirENUM:
      type: string
      enum: [ ASC, DESC ]
      default: ASC

    GetPricesSortFieldENUM:
      type: string
      enum: [ PRICE, CURRENCY, BRAND_ID, START_DATE, END_DATE, PRICE_LIST_ID, PRODUCT_ID ]
      default: PRICE


    SlicePaginationDTO:
      type: object
      required:
        - currentPageSize
        - currentPage
        - hasNextPage
      properties:
        currentPageSize:
          type: integer
          maximum: 50
          description: The current page size
        currentPage:
          type: integer
          minimum: 1
          description: The current page number
        hasNextPage:
          type: boolean
          description: Whether or not there is a next page

    PagePaginationDTO:
      allOf:
        - $ref: '#/components/schemas/SlicePaginationDTO'
        - type: object
          required:
            - totalItems
            - totalPages
          properties:
            totalItems:
              type: integer
              format: int64
              description: The resource total items
            totalPages:
              type: integer
              format: int64
              description: The resource total pages

    PageResponseDTO:
      type: object
      required:
        - pagination
      properties:
        pagination:
          $ref: '#/components/schemas/PagePaginationDTO'


    PriceDTO:
      type: object
      required:
        - productId
        - brandId
        - priceListId
        - startDate
        - endDate
        - price
        - currency
      properties:
        productId:
          type: integer
          format: int64
          example: 35455
        brandId:
          type: integer
          format: int64
          example: 1
        priceListId:
          type: integer
          format: int64
          description: Identifier of the price rate applied
          example: 2
        startDate:
          type: string
          description: Start date and time in local format (no timezone)
          example: "2020-06-14T15:00:00"
        endDate:
          type: string
          description: End date and time in local format (no timezone)
          example: "2020-06-14T18:30:00"
        price:
          type: number
          format: float
          example: 25.45
        currency:
          type: string
          example: EUR

    PricePaginatedDTO:
      allOf:
        - $ref: '#/components/schemas/PageResponseDTO'
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/PriceDTO'

    ErrorResponseDTO:
      type: object
      required:
        - type
        - title
        - status
        - detail
        - instance
      properties:
        type:
          type: string
          description: A URI reference that identifies the problem type.
          default: "about:blank"
          example: "about:blank"
        title:
          type: string
          description: A short, human-readable summary of the problem type.
          example: "Bad Request"
        status:
          type: integer
          format: int32
          description: The HTTP status code generated by the origin server.
          example: 400
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
          example: "Failed to convert 'productId' with value: '35455A'"
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem.
          example: "/prices"


  securitySchemes: {}
